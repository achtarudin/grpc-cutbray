name: PR Workflow

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: '0'

      - uses: actions/setup-go@v6
        with:
          go-version: '^1.24.0'
          cache: true
      
      - name: Check Go version
        run: go version

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: "32"

      - name: Check protoc version
        run: protoc --version
        
      - name: Install Go Protobuf Plugins
        shell: bash
        run: |
          go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@latest
          go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2@latest
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      
      - name: Install dependencies
        run: go mod download

      - name: Build protoc
        shell: bash
        run: | 
          make clean
          make protos
          make build-gateway

      - name: Check for changes
        id: git-check
        run: echo "changed=$(if git status --porcelain | grep -q 'protogen/'; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT

      - uses: stefanzweifel/git-auto-commit-action@v6
        name: Commit generated files
        if: steps.git-check.outputs.changed == 'true'
        with:
          file_pattern: 'protogen/*'
          commit_message: "ci(proto): auto-generate protobuf files skipping CI [skip ci]"

      - uses: anothrNick/github-tag-action@v1
        name: Bump version and push tag
        if: steps.git-check.outputs.changed == 'true'
        id: tag_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_PREFIX: v
          DEFAULT_BUMP: patch
          
      - name: Get the created tag
        if: steps.git-check.outputs.changed == 'true'
        run: "echo Tag Version: ${{ steps.tag_version.outputs.new_tag }}"

